# ------------------------------------------------------------
# 名称：Upstream Sync
# 作用：把上游仓库的最新代码自动同步到本仓库
# 触发方式：
#   1. 定时：每 30 分钟跑一次（可自行调整 cron）
#   2. 手动：GitHub → Actions → Upstream Sync → Run workflow
# ------------------------------------------------------------
name: Upstream Sync

on:
  schedule:
    # 每 30 分钟执行一次；如需改时间请查 https://crontab.guru
    - cron: "*/30 * * * *"

  # 允许在 GitHub 网页手动点击运行
  workflow_dispatch:

# 明确授予写权限，否则无法 push
permissions:
  contents: write

jobs:
  sync:
    runs-on: ubuntu-latest

    steps:
      # 步骤1：把本仓库代码拉下来，供后面合并
      - name: Checkout 当前仓库
        uses: actions/checkout@v4
        with:
          ref: main                       # 要同步的分支
          token: ${{ secrets.GITHUB_TOKEN }}  # GitHub 自动生成的临时令牌，无需手动创建

      # 步骤2：调用现成的 Action 做同步
      - name: 同步上游仓库最新代码
        uses: aormsby/Fork-Sync-With-Upstream-action@v3.4.1
        with:
          # ↓↓↓ 下面 4 行请根据自身仓库/分支名修改 ↓↓↓
          target_sync_branch: main        # 本仓库要同步的分支
          target_repo_token: ${{ secrets.GITHUB_TOKEN }}
          upstream_sync_branch: main      # 上游仓库的分支
          upstream_sync_repo: sjzar/chatlog  # 上游仓库地址（owner/repo）

      # 步骤3：打印友好提示，方便在 Actions 日志里一眼看出有没有新提交
      - name: 打印同步结果
        run: |
          echo "同步完成，当前仓库与上游仓库 sjzar/chatlog 保持一致"
